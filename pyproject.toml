[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
fallback_version = "9999"

[tool.setuptools.packages.find]
include = [
  "xdggs",
  "xdggs.*",
]

[project]
name = "xdggs"
dynamic = ["version"]
authors = [
  { name = "BenoÃ®t Bovy" },
  { name = "Justus Magin" },
]
maintainers = [
  { name = "xdggs contributors" },
]
license = { text = "Apache-2.0" }
description = "Xarray extension for DGGS"
keywords = ["DGGS", "xarray", "GIS"]
readme = "README.md"
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.10"
dependencies = [
  "xarray",
  "numpy>=2.0",
  "cdshealpix",
  "healpix-geo>=0.0.3",
  "h3ronpy",
  "typing-extensions",
  "lonboard>=0.9.3",
  "pyproj>=3.3",
  "matplotlib",
  "arro3-core>=0.4.0",
  "pooch",
]

[project.urls]
Documentation = "https://xdggs.readthedocs.io"
Repository = "https://github.com/xarray-contrib/xdggs"

[tool.ruff]
target-version = "py310"
builtins = ["ellipsis"]
exclude = [
  ".git",
  ".eggs",
  "build",
  "dist",
  "__pycache__",
]
line-length = 100

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
  "E402",
  "E501",
  "E731",
]
select = [
  "F",   # Pyflakes
  "E",   # Pycodestyle
  "I",   # isort
  "UP",  # Pyupgrade
  "TID", # flake8-tidy-imports
  "W",
]
extend-safe-fixes = [
  "TID252", # absolute imports
]
fixable = ["I", "TID252"]

[tool.ruff.lint.isort]
known-first-party = ["xdggs"]
known-third-party = [
  "xarray",
  "cdshealpix",
  "astropy",
  "h3ronpy",
]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.coverage.run]
source = ["xdggs"]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING"]

[tool.pytest.ini_options]
filterwarnings = [
  "error:::xdggs.*",
]
