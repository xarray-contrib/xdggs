[project]
name = "xdggs"
authors = [
  { name = "BenoÃ®t Bovy" },
  { name = "Justus Magin" },
]
maintainers = [
  { name = "xdggs contributors" },
]
license = { text = "Apache-2.0" }
description = "Xarray extension for DGGS"
keywords = ["DGGS", "xarray", "GIS"]
readme = "README.md"
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.11"
dependencies = [
  "xarray",
  "cdshealpix",
  "healpix-geo>=0.0.6",
  "h3ronpy",
  "lonboard>=0.9.3",
  "pyproj>=3.3",
  "matplotlib",
  "arro3-core>=0.4.0",
  "pooch",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://xdggs.readthedocs.io"
Repository = "https://github.com/xarray-contrib/xdggs"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch]
version.source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "xdggs/_version.py"

[tool.hatch.metadata.hooks.vcs]

[tool.hatch.build.targets.sdist]
only-include = ["xdggs"]

[tool.ruff]
target-version = "py311"
builtins = ["ellipsis"]
exclude = [
  ".git",
  ".eggs",
  "build",
  "dist",
  "__pycache__",
]
line-length = 100

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
  "E402",
  "E501",
  "E731",
]
select = [
  "F",   # Pyflakes
  "E",   # Pycodestyle
  "I",   # isort
  "UP",  # Pyupgrade
  "TID", # flake8-tidy-imports
  "W",
]
extend-safe-fixes = [
  "TID252", # absolute imports
]
fixable = ["I", "TID252"]

[tool.ruff.lint.isort]
known-first-party = ["xdggs"]
known-third-party = [
  "xarray",
  "cdshealpix",
  "astropy",
  "h3ronpy",
]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.coverage.run]
source = ["xdggs"]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING"]

[tool.pytest.ini_options]
filterwarnings = [
  "error:::xdggs.*",
  # weird cython error, see https://github.com/Unidata/netcdf4-python/issues/1354
  "ignore:numpy.ndarray size changed",
  # traitlets deprecation
  "ignore:.*is deprecated in traitlets:DeprecationWarning",
]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.34" }

[tool.pixi.pypi-dependencies]
xdggs = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.dependencies]
xarray = ">=2025.08.0"
cdshealpix = ">=0.7.1"
h3ronpy = ">=0.22.0"
lonboard = ">=0.9.3"
pyproj = ">=3.3"
matplotlib-base = ">=3.10.5"
arro3-core = ">=0.4.0"
pooch = ">=1.8.2"
healpix-geo = ">=0.0.6"

[tool.pixi.feature.tests.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
h5netcdf = "*"
netcdf4 = "*"
hypothesis = "*"
geoarrow-pyarrow = "*"
shapely = ">=2.1.1,<3"

[tool.pixi.feature.tests.tasks]
tests = "pytest -n auto --cov=xdggs"

[tool.pixi.feature.nightly.pypi-options]
extra-index-urls = [
  "https://pypi.anaconda.org/scientific-python-nightly-wheels/simple",
]
[tool.pixi.feature.nightly.pypi-dependencies]
xdggs = { path = ".", editable = true }
xarray = "*"
numpy = "*"
pandas = "*"
pyarrow = "*"
h3ronpy = { git = "git+https://github.com/keewis/h3ronpy.git", subdirectory = "h3ronpy", rev = "version" }
cdshealpix = { git = "git+https://github.com/cds-astro/cds-healpix-python.git" }
astropy = { git = "git+https://github.com/astropy/astropy.git" }
healpix-geo = { git = "git+https://github.com/eopf-dggs/healpix-geo.git" }

[tool.pixi.feature.nightly.dependencies]
lonboard = ">=0.11.1"
pyproj = ">=3.7.2"
matplotlib-base = ">=3.10.5"
arro3-core = ">=0.6.1"
pooch = ">=1.8.2"
rust = ">=1.89.0"
python = "3.13.*"
pytest-reportlog = "*"

[tool.pixi.feature.ci-py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.ci-py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.ci-py313.dependencies]
python = "3.13.*"

[tool.pixi.feature.docs.dependencies]
python = "3.13.*"
sphinx = "*"
myst-nb = "*"
sphinx-book-theme = "*"
sphinx-autosummary-accessors = "*"
sphinx-copybutton = "*"
sphinx-design = "*"
sphinx-inline-tabs = "*"
sphinxcontrib-bibtex = "*"
h5netcdf = "*"
pooch = "*"
shapely = ">=2.1.1"
sphinx-autobuild = ">=2024.10.3"

[tool.pixi.feature.docs.tasks]
build-docs = { cmd = "rm -rf generated/; python -m sphinx -b html -w warnings.log -W -Tn -j auto . _build", cwd = "docs" }
autobuild-docs = { cmd = "sphinx-autobuild -b html -w warnings.log -W -Tn -j auto . _build", cwd = "docs" }
build-docs-rtd = { cmd = "python -m sphinx -b html -W -T -j auto . $READTHEDOCS_OUTPUT/html", cwd = "docs" }

[tool.pixi.feature.dev.dependencies]
ipython = "*"
black = "*"
isort = "*"
jupyterlab = "*"
jupyter-resource-usage = "*"
jupyterlab_code_formatter = "*"
python-build = ">=1.3.0,<2"

[tool.pixi.environments]
nightly = { features = ["tests", "nightly"], no-default-feature = true }
ci-py311 = ["tests", "ci-py311"]
ci-py312 = ["tests", "ci-py312"]
ci-py313 = ["tests", "ci-py313"]
docs = ["docs"]
dev = ["tests", "dev"]
